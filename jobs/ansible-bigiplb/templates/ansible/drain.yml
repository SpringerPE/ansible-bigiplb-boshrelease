---
# All variables are defined in the inventory (or group_vars), so you can test
# this playbook offline with a fake inventory, or reuse in other places

- name: F5 BIGIP drain playbook
  hosts: f5
  gather_facts: False
  serial: 1

  tasks:
    # Tasks have "ignore_errors" to make possible working on weird use cases
    # when nodes were not able to connect with F5 and pre tasks have failed.

    - name: Force pool member offline
      bigip_pool_member:
        state: present
        pool: "{{ f5_pool_name }}"
        host: "{{ hostvars[item]['ansible_host'] }}"
        port: "{{ hostvars[item]['port'] }}"
        description: "{{ hostvars[item]['description'] | default(omit) }}"
        session_state: "disabled"
        monitor_state: "disabled"
        partition: "{{ f5_partition }}"
        server: "{{ f5_server }}"
        user: "{{ f5_user }}"
        password: "{{ f5_pass }}"
        validate_certs: "{{ f5_ssl_validate }}"
      with_items: "{{ groups['members'] }}"
      delegate_to: "{{ groups.client[0] }}"
      ignore_errors: yes

    - name: Pause until all local active connections are closed
      wait_for:
        state: drained
        delay: 10
        timeout: "{{ f5_pool_member_drain_timeout }}"
        host: "0.0.0.0"
        port: "{{ hostvars[item]['port'] }}"
      with_items: "{{ groups['instance'] }}"
      delegate_to: "{{ groups.client[0] }}"

    - name: Delete pool member
      bigip_pool_member:
        state: absent
        pool: "{{ f5_pool_name }}"
        host: "{{ hostvars[item]['ansible_host'] }}"
        port: "{{ hostvars[item]['port'] }}"
        partition: "{{ f5_partition }}"
        server: "{{ f5_server }}"
        user: "{{ f5_user }}"
        password: "{{ f5_pass }}"
        validate_certs: "{{ f5_ssl_validate }}"
      with_items: "{{ groups['members'] }}"
      delegate_to: "{{ groups.client[0] }}"
      ignore_errors: yes

